{
    "1": {
        "invocation": "Copy loadable kernel module \"mymodule.ko\" to the drivers in modules directory matchig current kernel.",
        "cmd": [
            "sudo cp mymodule.ko /lib/modules/$(uname -r)/kernel/drivers/"
        ]
    },
    "2": {
        "invocation": "Display all lines containing \"IP_MROUTE\" in the current kernel's compile-time config file.",
        "cmd": [
            "cat /boot/config-`uname -r` | grep IP_MROUTE"
        ]
    },
    "3": {
        "invocation": "Display current running kernel's compile-time config file.",
        "cmd": [
            "cat /boot/config-`uname -r`"
        ]
    },
    "4": {
        "invocation": "Find all loadable modules for current kernel, whose name includes \"perf\"",
        "cmd": [
            "find /lib/modules/`uname -r` -regex .*perf.*"
        ]
    },
    "5": {
        "invocation": "Look for any instance of \"HIGHMEM\" in the current kernel's compile-time config file.",
        "cmd": [
            "grep \u201cHIGHMEM\u201d /boot/config-`uname -r`"
        ]
    },
    "6": {
        "invocation": "Search for command \"tail\" in the maps of the process with PID 2671",
        "cmd": [
            "cat /proc/2671/maps | grep `which tail`"
        ]
    },
    "7": {
        "invocation": "Display all lines containing PROBES in the current kernel's compile-time config file.",
        "cmd": [
            "grep PROBES /boot/config-$(uname -r)"
        ]
    },
    "8": {
        "invocation": "Display all lines containing UTRACE in the current kernel's compile-time config file.",
        "cmd": [
            "grep UTRACE /boot/config-$(uname -r)"
        ]
    },
    "9": {
        "invocation": "Look for any instance of \"ds1337\" in the modules.alias file matching current kernel release",
        "cmd": [
            "grep ds1337 /lib/modules/`uname -r`/modules.alias"
        ]
    },
    "10": {
        "invocation": "A no-op on filename with sed",
        "cmd": [
            "sed -i \"s/\\\\\\\\\\n//g\" filename"
        ]
    },
    "11": {
        "invocation": "Abort the shell or script on the first failed command",
        "cmd": [
            "set -e"
        ]
    },
    "12": {
        "invocation": "Add \"Line of text here\" on top of each *.py files under current directory",
        "cmd": [
            "find . -name \\*.py -print0 | xargs -0 sed -i '1a Line of text here'"
        ]
    },
    "13": {
        "invocation": "Add \"Line of text here\" on top of each *.py files under current directory",
        "cmd": [
            "find . -name \\*.py | xargs sed -i '1a Line of text here'"
        ]
    },
    "14": {
        "invocation": "Add \"execute\" to the permissions of all directories in the home directory tree",
        "cmd": [
            "find ~ -type d -exec chmod +x {} \\;"
        ]
    },
    "15": {
        "invocation": "Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".",
        "cmd": [
            "rename 's/(.*)$/new.$1/' original.filename"
        ]
    },
    "16": {
        "invocation": "Add \"new.\" to the beginning of the name of \"original.filename\", renaming it to \"new.original.filename\".",
        "cmd": [
            "rename 's/^/new./' original.filename"
        ]
    },
    "17": {
        "invocation": "Add \"prefix\" to every non-blank line in \"file.txt\"",
        "cmd": [
            "nl -s prefix file.txt | cut -c7-"
        ]
    },
    "18": {
        "invocation": "Add \"prefix_\" to every non-blank line in \"a.txt\"",
        "cmd": [
            "nl -s \"prefix_\" a.txt | cut -c7-"
        ]
    },
    "19": {
        "invocation": "Add '.avi' extension to all files/directories with '.mkv' extension under '/volume1/uploads' directory tree",
        "cmd": [
            "find /volume1/uploads -name \"*.mkv\" -exec mv \\{\\} \\{\\}.avi \\;"
        ]
    },
    "20": {
        "invocation": "Add a cron job to existing list, without removing existing ones, ro tun \"scripty.sh\" at 2:01 am, 3rd day of april (4th month), if that day happens to be a friday (5th day of the week starting with sunday=0).",
        "cmd": [
            "cat <(crontab -l) <(echo \"1 2 3 4 5 scripty.sh\") | crontab -"
        ]
    }
}