Bashlint grammar set up (124 utilities)

model_dir=/nlc2cmd/src/submission_code/tellina_learning_module/model/seq2seq/bash--partial-4-birnn-gru-standard-attention-0.6-0.6-0.0-copy-1.0-128-200-1-0.0001-1e-08-0.6-0.6-0.6-0.6
decode_sig=beam_search.100.dev
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
WARNING:tensorflow:From /nlc2cmd/src/submission_code/encoder_decoder/graph_utils.py:325: GRUCell.__init__ (from tensorflow.python.ops.rnn_cell_impl) is deprecated and will be removed in a future version.
Instructions for updating:
This class is equivalent as tf.keras.layers.GRUCell, and will be replaced by that in Tensorflow 2.0.
encoder input dimension = 200
encoder output dimension = 400
creating beam search decoder: alpha = 1
token_decoder dimension = 400
token_decoder decoding_algorithm = beam_search
creating bucket 0 (13, 57)...
source token embedding size = 1324
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/rnn_cell_impl.py:559: Layer.add_variable (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.
Instructions for updating:
Please use `layer.add_weight` method instead.
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/rnn_cell_impl.py:565: calling Constant.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/rnn_cell_impl.py:575: calling Zeros.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.
Instructions for updating:
Call initializer instance with the dtype argument instead of passing it to the constructor
target token embedding size = 1219
WARNING:tensorflow:From /nlc2cmd/src/submission_code/encoder_decoder/beam_search.py:319: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.where in 2.0, which has the same broadcast rule as np.where
AttentionCellWrapper added!
CopyCellWrapper added!
WARNING:tensorflow:From /nlc2cmd/src/submission_code/encoder_decoder/beam_search.py:223: div (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Deprecated in favor of operator or tf.math.divide.
creating bucket 1 (18, 57)...
source token embedding size = 1324
target token embedding size = 1219
AttentionCellWrapper added!
CopyCellWrapper added!
creating bucket 2 (42, 57)...
source token embedding size = 1324
target token embedding size = 1219
AttentionCellWrapper added!
CopyCellWrapper added!
Reading model parameters from /nlc2cmd/src/submission_code/tellina_learning_module/model/seq2seq/bash--partial-4-birnn-gru-standard-attention-0.6-0.6-0.0-copy-1.0-128-200-1-0.0001-1e-08-0.6-0.6-0.6-0.6/translate.ckpt-4
loading models from /nlc2cmd/src/submission_code/tellina_learning_module/model/seq2seq/bash--partial-4-birnn-gru-standard-attention-0.6-0.6-0.0-copy-1.0-128-200-1-0.0001-1e-08-0.6-0.6-0.6-0.6
source vocabulary size = 1324
target vocabulary size = 1219
max source token size = 19
max target token size = 40
	17/07 22:36:39 :: 0 batches predicted
----------------------- Predictions -----------------------
--------------------------------------------------
Ground truth: ["rename 's/(.*)$/new.$1/' original.filename"]
Predictions: ["rename 's/^new./' new.original.filename", "rename 's/^new./new./' new.original.filename", "rename 's/new./new./' new.original.filename", "rename 's/^/new./' new.original.filename", "rename 's/^new./' original.filename"]
Score: 1.0
--------------------------------------------------
Ground truth: ['nl -s prefix file.txt | cut -c7-']
Predictions: ['nl -s prefix file.txt', 'nl -s prefix file.txt | cut -c 7-', 'nl -s prefix file.txt | cut -d : -f 1', 'nl -s prefix file.txt | nl', 'nl -v prefix file.txt']
Score: 1.0
--------------------------------------------------
Ground truth: ['sed -i "s/\\\\\n//g" filename']
Predictions: ['echo "$sed" | rev | cut -c 4- | rev', 'echo "$sed" | tr \'\\n\' \'\\n\' | tr \'\\n\' \'\\n\'', 'echo "$sed" | tr \'\\n\' \'\\n\' | tr \'\\n\' \' \'', 'echo "$sed" | rev | cut -d \' \' -f 1', 'echo "$sed" | tr \'\\n\' \'\\n\' | tr \'\\n\' \':\'']
Score: 0.0
--------------------------------------------------
Ground truth: ['crontab -l -u user | cat - filename | crontab -u user -']
Predictions: ['crontab -u user - filename | crontab -u user -', 'crontab -u user filename | crontab -u user -', 'crontab -u user filename | crontab -u user - | crontab -u user -', 'crontab -l -u user | cat - user | crontab -u user -', 'cat filename | crontab -u user - | crontab -u user -']
Score: 1.0
--------------------------------------------------
Ground truth: ['cat file1 file2 | crontab']
Predictions: ['cat file1 file2 | crontab', 'paste <( sort file1 ) <( ls file1 ) <( sort file2 )', 'paste <( sort file1 ) <( ls file1 ) <( ls file1 ) <( sort file2 )', 'paste <( sort file1 ) <( ls file1 ) <( ls file2 | crontab )', 'paste <( sort file1 ) <( ls file1 ) <( ls file1 ) <( ls file2 | crontab )']
Score: 1.0
--------------------------------------------------
Ground truth: ["find . -name \\*.py -print0 | xargs -0 sed -i '1a Line of text here'"]
Predictions: ["cat *.py | xargs -I {} rename 's/Line of text here' {}", 'find . -name "*.py" -exec rename \'s/Line of text here\' {} \\;', 'cat *.py | xargs -I {} file {} | grep "Line of text here"', 'cat *.py | xargs -I {} cat {} | grep "Line of text here"', 'echo "Line of text here" | rev | cut -d " " -f 1 | rev']
Score: 0.0
--------------------------------------------------
Ground truth: ['cat <(crontab -l) <(echo "1 2 3 4 5 scripty.sh") | crontab -']
Predictions: ["crontab -l -p | tr '\\n' ' ' | tr '\\n' ' ' | tr '\\n' ' ' | tr '\\n' ' '", "crontab -l -p | tr '\\n' ' ' | tr '\\n' ' ' | tr ' ' '\\n' | tr '\\n' ' '", "crontab -l -p scripty.sh | tr ' ' '\\n' | tr ' ' '\\n' | tr ' ' '\\n' | tr '\\n' '", "crontab -l -p scripty.sh | tr '\\n' ' ' | tr '\\n' ' ' | tr '\\n' ' '", "crontab -l -p | tr '\\n' ' ' | tr '\\n' ' ' | tr '\\n' ' '"]
Score: 0.0
--------------------------------------------------
Ground truth: ['pushd "$HOME/Pictures"']
Predictions: ['mkdir -p $HOME/Pictures', 'find "$HOME/Pictures" -type d -exec mkdir $HOME/Pictures {} \\;', 'find $HOME/Pictures -type d -exec mkdir $HOME/Pictures {} \\;', 'find $HOME/Pictures -maxdepth 1 -type d -exec mv {} $HOME/Pictures \\;', 'find "$HOME/Pictures" -type d -print0 | xargs -0 -I {} mv -t $HOME/Pictures {}']
Score: 0.0
--------------------------------------------------
Ground truth: ['find /volume1/uploads -name "*.mkv" -exec mv \\{\\} \\{\\}.avi \\;']
Predictions: ['find /volume1/uploads -name "*.mkv" -exec mv {} /volume1/uploads \\;', 'find /volume1/uploads -name "*.mkv" -print0 | xargs -0 -I {} mv {} /volume1/uploads', "find /volume1/uploads -name '*.mkv' -exec mv {} /volume1/uploads \\;", "find /volume1/uploads -name '*.mkv' -print0 | xargs -0 -I {} mv {} /volume1/uploads", 'find /volume1/uploads -name "*.mkv" -print0 | xargs -0 -I {} mv -t /volume1/uploads {}']
Score: 1.0
--------------------------------------------------
Ground truth: ['chmod +x *.sh']
Predictions: ['chmod +x *.sh', 'chmod a+x *.sh', 'chmod +x $( find . -name "*.sh" )', 'chmod +x *.sh | xargs -I {} chmod g+x {}', "chmod +x $( find . -name '*.sh' ) | xargs -I {} chmod g+x {}"]
Score: 1.0
--------------------------------------------------
Ground truth: ['find ~ -type d -exec chmod +x {} \\;']
Predictions: ['find ~/ -type d -exec chmod execute {} \\;', 'find ~/execute -type d -exec chmod execute {} \\;', 'find ./ -type d -exec chmod execute {} \\;', 'find $HOME -type d -exec chmod execute {} \\;', 'find ~ -type d -exec chmod +x {} \\;']
Score: 1.0
--------------------------------------------------
Ground truth: ["ping google.com | xargs -L 1 -I '{}' date '+%c: {}'"]
Predictions: ["ping google.com | xargs -L 1 -I {} date '+%c: {}'", 'ping google.com | xargs -L 1 -I {} cp ping google.com {}', "ping google.com | xargs -L 1 -I {} date '+%c: {}'", 'ping google.com | xargs -L 1 -I {} date {}', "ping  google.com | xargs -L 1 -I {} date '+%c: {}'"]
Score: 1.0
--------------------------------------------------
Ground truth: ['nl -ba infile']
Predictions: ['nl -b a infile', 'nl -b a infile -exec ln -s {} $( nl -s "infile" {} ) <( nl infile | nl -b a -s \'\\n\' infile | nl | nl -s __SP__UNK | nl -s __SP__UNK | nl', 'nl -b a infile -exec ln -s {} $( nl -s "infile" {} ) <( nl infile | nl -b a -s \'\\n\' infile | nl | nl -b a -n ln | nl -b a', 'nl -b a infile -exec ln -s {} $( nl -s "infile" {} ) <( nl infile | nl -b a -n ln | nl -b a -n ln | nl -b a -s \'infile\'', 'nl -b a infile -exec ln -s {} $( nl -s "infile" {} ) <( nl infile | nl -b a -s \'\\n\' infile | nl | nl -b a -s \' \'']
Score: 1.0
--------------------------------------------------
Ground truth: ["sed 's/3d3d/\n&/2g' temp | split -dl1 - temp"]
Predictions: ["cat 3d3d | grep -E '3d3d' | cut -d ' ' -f 1", "cat 3d3d | grep -o '3d3d' | cut -d ' ' -f 2 | rev", "cat 3d3d | grep -o '3d3d' | cut -d ' ' -f 1", "cat 3d3d | grep -E '3d3d' | cut -d ' ' -f 2", "cat temp | grep '3d3d' | cut -d ' ' -f 1"]
Score: 0.0
--------------------------------------------------
Ground truth: ['perl -pi -e \'BEGIN { print "A new line" }\' $(find . -name \'*.py\')']
Predictions: ['cat *.py | xargs -I {} cat {} | sort | uniq', 'cat *.py | xargs -I {} cat {} | sort', 'cat *.py | xargs -I {} mv {} *.py', 'cat *.py | xargs -I {} file {} | grep "A new line"', 'cat *.py | xargs -I {} echo *.py {}']
Score: 0.0
--------------------------------------------------
Ground truth: ['set -e']
Predictions: ['echo $( dirname $( which failed ) )', 'echo $( echo "$failed" | tr \'[:failed:]\' \'[:failed:]\' )', 'echo $( dirname $( which Abort ) )', '$( which failed )', 'echo "$failed" | cut -d \' \' -f 1']
Score: 0.0
--------------------------------------------------
Ground truth: ['echo "$string" | nl -ba -s\') \'']
Predictions: ['echo "$string" | nl -b a -s \' ) \'', 'echo "$string" | nl -b a -s \'$string\'', 'echo "$string" | nl -b a -s \') \'', 'echo " ) " | nl -b a -s \' ) \'', 'echo "$string" | nl -b a -s \' string\'']
Score: 1.0
--------------------------------------------------
Ground truth: ["chmod g+w $(ls -1a | grep -v '^..$')"]
Predictions: ['chmod g+w *..', 'chmod g+w ...', 'chmod g+w ... | cut -d : -f 1 | xargs -I {} chmod g+w {}', 'chmod g+w ... | xargs -I {} chmod g+w {}', 'chmod g+w ... | xargs -I {} chmod -R g+w {}']
Score: 0.0
--------------------------------------------------
Ground truth: ['chmod +x rr.sh']
Predictions: ['chmod +x rr.sh', 'chmod +rx rr.sh', 'chmod a+x rr.sh', 'chmod +__SP__UNK rr.sh', 'chmod u+x rr.sh']
Score: 1.0
--------------------------------------------------
Ground truth: ['nl -v1000001 file']
Predictions: ['nl -v 1000001 file', 'nl -v 1000001 file -exec nl {} {}-blank \\;', 'nl -v 1000001 1000001', 'nl -v 1000001 file -exec nl -h {} {} \\;', 'nl -v 1000001 file -exec nl -v {} {} \\;']
Score: 1.0
sum: 12.0, n: 20
----------------------- Predictions -----------------------
